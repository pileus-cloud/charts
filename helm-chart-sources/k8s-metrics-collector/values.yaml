image:
  repository: public.ecr.aws/i5o6o6d7/k8s-metrics-agent
  pullPolicy: IfNotPresent
  tag: "0.3.4"

# workload type: Deployment or CronJob
workload: CronJob

CronJob:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 15
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
  activeDeadlineSeconds: 14400
  # -- Valid values: "OnFailure", "Never"
  restartPolicy: "Never"
  backoffLimit: 0

environment:
  # Needed only for the Deployment workload
  # CRON_SCHEDULE: : "0 * * * *"

  # Bucket name of the Anodot destination bucket
  S3_BUCKET: 'prod-prometheus-agent'
  
  # Monitoring support coming soon
  MONITORING: 'none'
  LOG_TO_CLOUD_WATCH: 'true'

  # Prometheus or Thanos URL, might be different for your cluster depending on the service name, namespace and port
  PROMETHEUS_URL: 'http://prometheus-kube-prometheus-prometheus:9090'
  
  # Name of the cluster where k8s-metrics-collector is installed, should match the name of the cluster in your cloud
  CLUSTER_NAME: 'your-cluster-name'
  
  # When using Thanos specify a condition, that will filter results by labels, to fetch data only of a specific cluster
  # METRIC_CONDITION: 'cluster="cluster_name"'
  
  # ID of your AWS root account
  ACCOUNT_ID: 'account-id'
  
  # ID of your AWS linked account
  LINKED_ACCOUNT_ID: 'linked-account-id'
  
  CLOUD_PROVIDER: 'aws'
  
  # Provided by Anodot:

  # Access keys or role ARN to access Anodot AWS
  # ROLE_ARN: 'arn:aws:iam::1111222233334444:role/customer-agent-role'
  AWS_ACCESS_KEY_ID: 'access-key-id'
  AWS_SECRET_ACCESS_KEY: 'secret-access-key'


podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
