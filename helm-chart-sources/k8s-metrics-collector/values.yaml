image:
  repository: public.ecr.aws/i5o6o6d7/k8s-metrics-agent
  pullPolicy: IfNotPresent
  tag: "0.3.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# workload type: Deployment or CronJob
workload: CronJob

CronJob:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 15
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
  activeDeadlineSeconds: 14400
  # -- Valid values: "OnFailure", "Never"
  restartPolicy: "Never"
  backoffLimit: 0

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

environment:
  # ========= PLACE YOUR OWN VALUES HERE: =========

  # should match the name of the cluster in your cloud
  CLUSTER_NAME: '<name of the cluster the chart is being installed to>'

  ACCOUNT_ID: '<ID of your AWS root account>'
  LINKED_ACCOUNT_ID: '<ID of your AWS linked account which owns the cluster>'

  CLOUD_PROVIDER: 'aws'

  # Provided by Anodot:
  # ROLE_ARN: '<role ARN to access Anodot AWS>'

  # Prometheus or Thanos URL, might be different for your cluster depending on the service name, namespace and port
  PROMETHEUS_URL: 'http://prometheus-kube-prometheus-prometheus:9090'

  # When using Thanos specify a condition, that will filter results by labels, to fetch data only of a specific cluster
  # METRIC_CONDITION: 'cluster="cluster_name"'

  # Needed only for the Deployment workload
  # CRON_SCHEDULE: : "0 * * * *"

  # ========= THE NEXT VALUES USUALLY DO NOT NEED TO BE CHANGED =========

  # Bucket name of the Anodot destination bucket
  S3_BUCKET: 'prod-prometheus-agent'
  
  # Monitoring support coming soon
  MONITORING: 'none'

  LOG_TO_CLOUD_WATCH: 'true'

environmentVars:
  # type 'env' - secrets will be added from environmentSecrets to container as environment variables
  # type 'secret' - secrets will be added from environmentSecrets to Secret object and used in container as environment variables 
  type: env

environmentSecrets:
  # Provided by Anodot:
  AWS_ACCESS_KEY_ID: '<access key for Anodot AWS>'
  AWS_SECRET_ACCESS_KEY: '<secret access key for Anodot AWS>'

## Enabled environmentExternalSecrets takes precedence over settings in environmentVars and values in environmentSecrets
environmentExternalSecrets:
  enabled: false
  ## Provide secret name, it must be the same as defined in kind:ExternalSecret target.name, more details in README.md
  name: anodot-cost-secrets

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

prometheusrule:
  enabled: false

configmap:
   enabled: false