{{- if eq .Values.workload  "CronJob" }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "k8s-metrics-collector.fullname" . }}
  labels:
    {{- include "k8s-metrics-collector.labels" . | nindent 4 }}
    {{- with .Values.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  schedule: "{{ .Values.CronJob.schedule }}"
  concurrencyPolicy: {{ .Values.CronJob.concurrencyPolicy }}
  startingDeadlineSeconds: {{ .Values.CronJob.startingDeadlineSeconds }}
  failedJobsHistoryLimit: {{ .Values.CronJob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .Values.CronJob.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.CronJob.backoffLimit }}
      template:
        metadata:
          labels:
            {{- include "k8s-metrics-collector.labels" . | nindent 12 }}
            {{- with .Values.additionalLabels }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          activeDeadlineSeconds: {{ .Values.CronJob.activeDeadlineSeconds }}
          restartPolicy: {{ .Values.CronJob.restartPolicy }}
          serviceAccountName: {{ include "k8s-metrics-collector.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              env:
                - name: WORKLOAD
                  value: {{ .Values.workload }}
                {{- range $name, $value := .Values.environment }}
                {{- if not (empty $value) }}
                - name: {{ $name }}
                  value: {{ $value | quote }}
                {{- end }}
                {{- end }}
                {{- if not (eq .Values.environmentVars.type  "secret") }}
                {{- range $name, $value := .Values.environmentSecrets }}
                {{- if not (empty $value) }}
                - name: {{ $name }}
                  value: {{ $value | quote }}
                {{- end }}
                {{- end }}
                {{- end }}
              {{- if or (eq .Values.environmentVars.type  "secret") (.Values.environmentExternalSecrets.enabled) }}
              envFrom:
              {{- if .Values.environmentExternalSecrets.enabled }}
                  - secretRef:
                      name: {{ .Values.environmentExternalSecrets.name }}
              {{- else if (eq .Values.environmentVars.type  "secret") }}
                  - secretRef:
                      name: {{ include "k8s-metrics-collector.fullname" . }}
              {{- end }}
              {{- end }}
              volumeMounts:
                {{- if .Values.configmap.enabled }}
                {{- if .Values.configmap.files }}
                {{- range .Values.configmap.files }}
                - mountPath: {{ .mountPath }}
                  name: files
                  {{- range $name, $value := .data }}
                  subPath: ..data/{{ $name }}
                  {{- end }}
                {{- end }}
                {{- end }}
                {{- if .Values.configmap.binaryFiles }}
                {{- range .Values.configmap.binaryFiles }}
                - mountPath: {{ .mountPath }}
                  name: files
                  {{- range $name, $value := .data }}
                  subPath: ..data/{{ $name }}
                  {{- end }}
                {{- end }}
                {{- end }}
                {{- end }}

              resources:
                {{- toYaml .Values.resources | nindent 16 }}
          volumes:
          {{- if .Values.configmap.enabled  }}
          {{- if or .Values.configmap.files .Values.configmap.binaryFiles }}
            - name: files
              configMap:
                name: {{ include "k8s-metrics-collector.fullname" . }}
          {{- end }}
          {{- end }}

          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}
